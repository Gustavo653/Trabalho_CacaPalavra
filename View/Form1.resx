<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>