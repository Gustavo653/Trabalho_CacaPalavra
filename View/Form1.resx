<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Np4wMAAAAABJRU5ErkJggg==
</value>
  </data>
</root>